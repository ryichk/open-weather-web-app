import axios from 'axios';
import Head from 'next/head';
import type {NextPage, GetServerSidePropsContext} from 'next/types';

type Weather = {
  id: number;
  description: string;
  icon: string;
  main: string;
}

type Props = {
  place: string | null;
  weather: Weather[];
  temp: number | null;
  temp_min: number | null;
  temp_max: number | null;
  feels_like: number | null;
  humidity: number | null;
}

const Home: NextPage<Props> = ({ place, weather, temp, temp_min, temp_max, feels_like, humidity }) => {
  // const [latitude, setLatitude] = useState('');
  // const [longitude, setLongitude] = useState('');

  // useEffect(() => {
    // const setLocation = (position) => {
    //   setLatitude(position.coords.lattitude);
    //   setLongitude(position.coords.longitude);
    // };
    // const showError = (error) => {
    //   switch(error.code) {
    //     case 1 : alert('位置情報の利用が許可されていません'); break;
    //     case 2 : alert('デバイスの位置が判定できません'); break;
    //     case 3 : alert('タイムアウトしました'); break;
    //     default : alert(error.message);
    //   }
    // };

    // if ('geolocation' in navigator) {
    //   navigator.geolocation.getCurrentPosition(setLocation, showError);
    // } else {
    //   alert('ブラウザが位置情報取得に対応していません');
    // }
  // }, []);

  return (
    <div className=''>
      <Head>
        <title>Open Weather Web App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='m-auto w-1/2'>
        <h1 className='text-green-500'>
          Open Weather Web App
        </h1>

        <div className=''>
          <h2></h2>
          <p>
            場所: {place}
          </p>
        </div>
        <div className=''>
          <h2></h2>
          <p>
            天気: {weather.map((w) => <span key={w.id}>{w.description}</span>)}
          </p>
        </div>
        <div>
          <h2></h2>
          <p>
            気温: {temp} °c<br />
            体感温度: {feels_like} °c<br />
            最高気温: {temp_max} °c<br />
            最低気温: {temp_min} °c<br />
            湿度: {humidity} %
          </p>
        </div>
      </main>

      <footer className='m-auto w-1/2 text-center'>
        <a
          href='https://ryichk.com'
          target='_blank'
          rel='noopener noreferrer'
        >
          ©︎ ryichk
        </a>
      </footer>
    </div>
  );
};

export default Home;

export async function getServerSideProps(context: GetServerSidePropsContext) {
  try {
    const host = context.req.headers.host || 'localhost:3000';
    const protocol = /^localhost/.test(host) ? 'http' : 'https';
    const response = await axios.get(`${protocol}://${host}/api/weather`);
    return {
      props: {
        place: response.data.name,
        weather: response.data.weather,
        temp: response.data.main.temp,
        temp_min: response.data.main.temp_min,
        temp_max: response.data.main.temp_max,
        feels_like: response.data.main.feels_like,
        humidity: response.data.main.humidity,
      }
    };
  } catch (error) {
    console.error(error);
    return {
      props: {
        place: '',
        weather: [],
        temp: null,
        temp_min: null,
        temp_max: null,
        feels_like: null,
        humidity: null,
      }
    };
  }
}
